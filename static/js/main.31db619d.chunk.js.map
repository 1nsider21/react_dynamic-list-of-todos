{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["TodoList","todos","selectUser","query","status","filteredTodos","filter","todo","title","toLowerCase","includes","completed","className","map","key","id","cn","type","checked","readOnly","onClick","userId","CurrentUser","name","email","phone","onClear","defaultProps","getTodos","fetch","then","response","json","getUser","App","state","selectedUserId","user","componentDidMount","a","setState","data","componentDidUpdate","this","onChange","event","target","value","placeholder","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31db619d.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const TodoList = ({\n  todos,\n  selectUser,\n  query,\n  status,\n}) => {\n  let filteredTodos = todos.filter(\n    todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n  );\n\n  switch (status) {\n    case 'completed':\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n      break;\n    case 'active':\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"TodoList\">\n      <div className=\"TodoList__list-container\">\n\n        <ul className=\"TodoList__list\">\n          {filteredTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={cn({\n                'TodoList__item TodoList__item--checked': todo.completed,\n                'TodoList__item TodoList__item--unchecked': !todo.completed,\n              })}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n              <button\n                className=\"TodoList__user-button button\"\n                type=\"button\"\n                onClick={() => selectUser(todo.userId)}\n              >\n                User&nbsp;#\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\n\nexport const CurrentUser = ({ id, name, email, phone, onClear }) => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        Selected user:\n        {id}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">{name}</h3>\n    <p className=\"CurrentUser__email\">{email}</p>\n    <p className=\"CurrentUser__phone\">{phone}</p>\n\n    <button\n      type=\"button\"\n      onClick={onClear}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  email: PropTypes.string,\n  phone: PropTypes.string,\n  onClear: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  id: 0,\n  name: '',\n  email: '',\n  phone: '',\n};\n","const API_TODOS = 'https://mate-api.herokuapp.com/todos';\nconst API_USERS = 'https://mate-api.herokuapp.com/users';\n\nexport const getTodos = () => (\n  fetch(API_TODOS)\n    .then(response => response.json())\n);\n\nexport const getUser = userId => (\n  fetch(`${API_USERS}/${userId}`)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUser } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    user: {},\n    status: 'all',\n    query: '',\n  };\n\n  componentDidMount = async() => {\n    const todos = await getTodos();\n\n    this.setState({\n      todos: todos.data.filter(todo => todo.userId),\n    });\n  }\n\n  componentDidUpdate = () => {\n    if (this.state.selectedUserId !== 0\n      && this.state.selectedUserId !== this.state.user.id\n      && this.state.selectedUserId) {\n      getUser(this.state.selectedUserId)\n        .then((user) => {\n          if (user.data !== null) {\n            this.setState({ user: user.data });\n          } else {\n            this.setState(state => ({ user: {\n              id: state.selectedUserId,\n              name: 'No name',\n              email: 'No email',\n              phone: 'No phone',\n            } }));\n          }\n        });\n    }\n  }\n\n  selectUser = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  onClear = () => {\n    this.setState({\n      user: {},\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { selectedUserId, todos, user, query, status } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n\n          <select\n            onChange={event => this.setState({ status: event.target.value })\n            }\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n\n          <input\n            type=\"text\"\n            placeholder=\"Find todo\"\n            onChange={event => this.setState({ query: event.target.value })}\n          />\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            query={query}\n            status={status}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId && user ? (\n              <CurrentUser\n                {...user}\n                onClear={this.onClear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}